[{"D:\\VS_Code\\Projects\\lad_react\\src\\index.js":"1","D:\\VS_Code\\Projects\\lad_react\\src\\reportWebVitals.js":"2","D:\\VS_Code\\Projects\\lad_react\\src\\CombinedForm.js":"3","D:\\VS_Code\\Projects\\lad_react\\src\\Form1.js":"4","D:\\VS_Code\\Projects\\lad_react\\src\\Form2.js":"5","D:\\VS_Code\\Projects\\lad_react\\src\\Form3.js":"6","D:\\VS_Code\\Projects\\lad_react\\src\\CommonFields.js":"7","D:\\VS_Code\\Projects\\lad_react\\src\\OuterLayer.js":"8"},{"size":347,"mtime":1695549553369,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1695525225563,"results":"11","hashOfConfig":"10"},{"size":2191,"mtime":1695552571903,"results":"12","hashOfConfig":"10"},{"size":5132,"mtime":1695677867857,"results":"13","hashOfConfig":"10"},{"size":5715,"mtime":1695673375610,"results":"14","hashOfConfig":"10"},{"size":4367,"mtime":1695669610236,"results":"15","hashOfConfig":"10"},{"size":3118,"mtime":1695538925066,"results":"16","hashOfConfig":"10"},{"size":543,"mtime":1695556323983,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"1ylh589",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"D:\\VS_Code\\Projects\\lad_react\\src\\index.js",[],[],["48"],"D:\\VS_Code\\Projects\\lad_react\\src\\reportWebVitals.js",[],[],"D:\\VS_Code\\Projects\\lad_react\\src\\CombinedForm.js",["49","50","51","52","53","54"],[],"import React, { useState } from \"react\";\r\nimport Form1 from \"./Form1\";\r\nimport Form2 from \"./Form2\";\r\nimport Form3 from \"./Form3\";\r\n\r\nexport default function CombinedForm(props) {\r\n    const [value, setValue] = useState(\"1\");\r\n\r\n    const handleClick = (event) => {\r\n        const value = event.target.value;\r\n        if (value == \"1\"){\r\n            setValue(value);\r\n            props.func(\"/landarea0.png\")\r\n        }\r\n        else if(value == \"2\"){\r\n            setValue(value);\r\n            props.func(\"/landarea2.png\")\r\n        }\r\n        else if(value == \"3\"){\r\n            setValue(value);\r\n            props.func(\"/landarea0.png\")\r\n        }\r\n    };\r\n    if (value == '1'){\r\n        return (\r\n        <div>\r\n        <button value=\"2\"\r\n        onClick={handleClick} className=\"btnstyle\" title=\"To Cut Section From Field\">Land Area Form2</button>\r\n        <button value=\"3\"\r\n        onClick={handleClick} className=\"btnstyle\" title=\"To Calculate Area Of Land\">Land Area Form3</button>\r\n        <button value=\"1\"\r\n        onClick={handleClick} className=\"btnstyle\" title=\"Home\">Home</button>\r\n        <Form1 func={props.func} />\r\n        </div>\r\n    );\r\n    }\r\n    else if (value == '2'){\r\n        return (\r\n        <div>\r\n        <button value=\"1\"\r\n        onClick={handleClick} className=\"btnstyle\" title=\"To Divide In Equal Part\">Land Area Form1</button>\r\n        <button value=\"3\"\r\n        onClick={handleClick} className=\"btnstyle\" title=\"To Calculate Area Of Land\">Land Area Form3</button>\r\n        <button value=\"1\"\r\n        onClick={handleClick} className=\"btnstyle\" title=\"Home\">Home</button>\r\n        <Form2 func={props.func} />\r\n        </div>\r\n    );\r\n    }\r\n    else if (value == '3'){\r\n        return (\r\n        <div>\r\n        <button value=\"1\"\r\n        onClick={handleClick} className=\"btnstyle\" title=\"To Divide In Equal Part\">Land Area Form1</button>\r\n        <button value=\"2\"\r\n        onClick={handleClick} className=\"btnstyle\" title=\"To Calculate Area Of Land\">Land Area Form2</button>\r\n        <button value=\"1\"\r\n        onClick={handleClick} className=\"btnstyle\" title=\"Home\">Home</button>\r\n        <Form3 func={props.func} />\r\n        </div>\r\n    );\r\n    }\r\n    }","D:\\VS_Code\\Projects\\lad_react\\src\\Form1.js",["55"],[],"import React, { useState } from 'react';\r\n\r\nexport default function Form1(props) {\r\n    const [formData, setFormData] = useState({\r\n      // name: '',\r\n      ab: '',\r\n      bc: '',\r\n      cd: '',\r\n      da: '',\r\n      bd: '',\r\n      n: '',\r\n    });\r\n  \r\n    const handleChange = (e) => {\r\n      const { name, value } = e.target;\r\n      setFormData({ ...formData, [name]: value });\r\n    };\r\n  \r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target\r\n        setFormData({ ...formData, [name]: value });\r\n      };\r\n\r\n    const [result, setResult] = useState(null);\r\n  \r\n    const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n\r\n      // Changing the background image\r\n      props.func(\"/landareadivider_result1.png\")\r\n\r\n      // console.log(formData);\r\n      try {\r\n        const response = await fetch('http://127.0.0.1:8000/api/land_division/', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(formData),\r\n        });\r\n        if (response.ok) {\r\n          // Request was successful, handle the response data\r\n          const responseData = await response.json();\r\n          console.log('API Response:', responseData.points);\r\n          setResult(responseData.points);\r\n        } else {\r\n          // Request failed, handle the error\r\n          console.error('API Request Failed');\r\n        }\r\n      } catch (error) {\r\n        console.error('API Request Error:', error);\r\n      }\r\n    }; \r\n  \r\n    return (\r\n      <>\r\n      <form method=\"post\" onSubmit={handleSubmit} noValidate>\r\n          <h4>This Form is for Land Division in Equal Part</h4>\r\n          <p><i>Each length must be in the same unit</i></p>\r\n\r\n  \r\n          {/* <p>\r\n            <label htmlFor=\"name\">Name: </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              maxLength=\"100\"\r\n              id=\"name\"\r\n              placeholder='Enter Any Name'\r\n              value={formData.name}\r\n              onChange={handleChange}\r\n              autoComplete='on'\r\n            />\r\n          </p> */}\r\n  \r\n          <p>\r\n          <label htmlFor=\"id_ab\">AB: </label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"ab\"\r\n            step=\"any\"\r\n            required\r\n            id=\"id_ab\"\r\n            placeholder='Enter length of AB'\r\n            value={formData.ab}\r\n            onChange={handleInputChange}\r\n          />\r\n          </p>\r\n  \r\n          <p>\r\n              <label htmlFor=\"id_bc\">BC: </label>\r\n              <input\r\n              type=\"number\"\r\n              name=\"bc\"\r\n              step=\"any\"\r\n              required\r\n              id=\"id_bc\"\r\n              placeholder='Enter length of BC'\r\n              value={formData.bc}\r\n              onChange={handleInputChange}\r\n              />\r\n          </p>\r\n  \r\n          <p>\r\n              <label htmlFor=\"id_cd\">CD: </label>\r\n              <input\r\n              type=\"number\"\r\n              name=\"cd\"\r\n              step=\"any\"\r\n              required\r\n              id=\"id_cd\"\r\n              placeholder='Enter length of CD'\r\n              value={formData.cd}\r\n              onChange={handleInputChange}\r\n              />\r\n          </p>\r\n  \r\n          <p>\r\n              <label htmlFor=\"id_da\">DA: </label>\r\n              <input\r\n              type=\"number\"\r\n              name=\"da\"\r\n              step=\"any\"\r\n              required\r\n              id=\"id_da\"\r\n              placeholder='Enter length of DA'\r\n              value={formData.da}\r\n              onChange={handleInputChange}\r\n              />\r\n          </p>\r\n  \r\n          <p>\r\n              <label htmlFor=\"id_bd\">BD: </label>\r\n              <input\r\n              type=\"number\"\r\n              name=\"bd\"\r\n              step=\"any\"\r\n              required\r\n              id=\"id_bd\"\r\n              placeholder='Enter length of BD'\r\n              value={formData.bd}\r\n              onChange={handleInputChange}\r\n              />\r\n          </p>\r\n\r\n          <p>\r\n            <label htmlFor=\"id_n\">n: </label>\r\n            <input\r\n            type=\"number\"\r\n            name=\"n\"\r\n            step=\"any\"\r\n            required\r\n            id=\"id_n\"\r\n            placeholder='Enter Number of People'\r\n            title='Number of People'\r\n            value={formData.n}\r\n            onChange={handleInputChange}\r\n            />\r\n        </p>\r\n  \r\n          <button type=\"submit\" name=\"form_type\" value=\"form1\" className=\"btnstyle\">\r\n            Get Result\r\n          </button>\r\n        </form>\r\n        <p className=\"pstyle\"><i><b>Note: </b></i>we have to make equal section on front side of field</p>\r\n        <p className=\"pstyle\">AP<sub>1</sub>=P<sub>1</sub>P<sub>2</sub>=P<sub>2</sub>P<sub>3</sub>=...=P<sub>n-1</sub>B</p>\r\n        {result !== null && (\r\n          <div>\r\n            <h2>Result</h2>\r\n          </div>\r\n        )}\r\n        {result !== null && \r\n          Object.keys(result).map((key) => (\r\n            <div key={key}>\r\n              <p>{key}: {result[key]}</p>\r\n            </div>\r\n          )\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n\r\n  ","D:\\VS_Code\\Projects\\lad_react\\src\\Form2.js",["56"],[],"import React, {useState} from \"react\";\r\n\r\nexport default function Form2(props) {\r\n    const [formData, setFormData] = useState({\r\n        // name: '',\r\n        ab: '',\r\n        bc: '',\r\n        cd: '',\r\n        da: '',\r\n        bd: '',\r\n        ap1: '',\r\n        area_of_section: '',\r\n    });\r\n  \r\n    const handleChange = (e) => {\r\n      const { name, value } = e.target;\r\n      setFormData({ ...formData, [name]: value });\r\n    };\r\n  \r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({ ...formData, [name]: value });\r\n      };\r\n    \r\n      const [result, setResult] = useState(null);\r\n\r\n       \r\n      const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Changing the background image\r\n        props.func(\"/landareadivider_result2.png\")\r\n\r\n        console.log(formData);\r\n        try {\r\n          const response = await fetch('http://127.0.0.1:8000/api/cut_section_area/', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(formData),\r\n          });\r\n          if (response.ok) {\r\n            // Request was successful, handle the response data\r\n            const responseData = await response.json();\r\n            console.log('API Response:', responseData.points.DQ1);\r\n            setResult(responseData);\r\n          } else {\r\n            // Request failed, handle the error\r\n            console.error('API Request Failed');\r\n          }\r\n        } catch (error) {\r\n          console.error('API Request Error:', error);\r\n        }\r\n      }; \r\n  \r\n    return (\r\n    <>\r\n        <form method=\"post\" noValidate onSubmit={handleSubmit}>\r\n            <h4>This Form is for Cutting Section from Land</h4>\r\n            <p><i>Each length must be in same unit and area must be unit square</i></p>\r\n            \r\n  \r\n          {/* <p>\r\n            <label htmlFor=\"name\">Name: </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              maxLength=\"100\"\r\n              id=\"name\"\r\n              value={formData.name}\r\n              onChange={handleChange}\r\n              autoComplete=\"on\"\r\n              placeholder=\"Enter Any Name\"\r\n            />\r\n          </p> */}\r\n  \r\n          <p>\r\n          <label htmlFor=\"id_ab\">AB: </label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"ab\"\r\n            step=\"any\"\r\n            required\r\n            id=\"id_ab\"\r\n            value={formData.ab}\r\n            onChange={handleInputChange}\r\n            placeholder=\"Enter length of AB\"\r\n            autoComplete=\"on\"\r\n          />\r\n          </p>\r\n  \r\n          <p>\r\n              <label htmlFor=\"id_bc\">BC: </label>\r\n              <input\r\n              type=\"number\"\r\n              name=\"bc\"\r\n              step=\"any\"\r\n              required\r\n              id=\"id_bc\"\r\n              value={formData.bc}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Enter length of BC\"\r\n              autoComplete=\"on\"\r\n              />\r\n          </p>\r\n  \r\n          <p>\r\n              <label htmlFor=\"id_cd\">CD: </label>\r\n              <input\r\n              type=\"number\"\r\n              name=\"cd\"\r\n              step=\"any\"\r\n              required\r\n              id=\"id_cd\"\r\n              value={formData.cd}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Enter length of CD\"\r\n              autoComplete=\"on\"\r\n              />\r\n          </p>\r\n  \r\n          <p>\r\n              <label htmlFor=\"id_da\">DA: </label>\r\n              <input\r\n              type=\"number\"\r\n              name=\"da\"\r\n              step=\"any\"\r\n              required\r\n              id=\"id_da\"\r\n              value={formData.da}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Enter length of DA\"\r\n              autoComplete=\"on\"\r\n              />\r\n          </p>\r\n  \r\n          <p>\r\n              <label htmlFor=\"id_bd\">BD: </label>\r\n              <input\r\n              type=\"number\"\r\n              name=\"bd\"\r\n              step=\"any\"\r\n              required\r\n              id=\"id_bd\"\r\n              value={formData.bd}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Enter length of BD\"\r\n              autoComplete=\"on\"\r\n              />\r\n          </p>\r\n\r\n            <p>\r\n                <label htmlFor=\"id_ap1\">AP: </label>\r\n                <input\r\n                type=\"number\"\r\n                name=\"ap1\"\r\n                step=\"any\"\r\n                required\r\n                id=\"id_ap1\"\r\n                value={formData.ap1}\r\n                onChange={handleInputChange}\r\n                placeholder=\"Enter length of AP1\"\r\n                autoComplete=\"on\"\r\n                />\r\n            </p>\r\n\r\n            <p>\r\n                <label htmlFor=\"id_area_of_section\">Area of Section: </label>\r\n                <input\r\n                type=\"number\"\r\n                name=\"area_of_section\"\r\n                step=\"any\"\r\n                required\r\n                id=\"id_area_of_section\"\r\n                value={formData.area_of_section}\r\n                onChange={handleInputChange}\r\n                placeholder=\"Enter Area of Section P1ADQ1\"\r\n                className=\"padq\"\r\n                autoComplete=\"on\"\r\n                />\r\n            </p>\r\n\r\n            <button type=\"submit\" name=\"form_type\" value=\"form2\" className=\"btnstyle\">\r\n            Get Result\r\n            </button>\r\n        </form>\r\n        {result !== null && (\r\n          <div>\r\n            <h2>Result</h2>\r\n            <p>DQ : { result.points.DQ1 }</p>\r\n            <p>AP : { result.points.AP1 }</p>\r\n          </div>\r\n        )}\r\n    </>\r\n    );\r\n  }\r\n\r\n\r\n  ",["57"],"D:\\VS_Code\\Projects\\lad_react\\src\\Form3.js",["58"],[],"import React, {useState} from \"react\";\r\n\r\n\r\nexport default function Form3(props) {\r\n  \r\n    const [formData, setFormData] = useState({\r\n        // name: '',\r\n        ab: '',\r\n        bc: '',\r\n        cd: '',\r\n        da: '',\r\n        bd: '',\r\n      });\r\n\r\n    const [result, setResult] = useState(null);\r\n  \r\n    const handleChange = (e) => {\r\n      const { name, value } = e.target;\r\n      setFormData({ ...formData, [name]: value });\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({ ...formData, [name]: value });\r\n      };\r\n\r\n      const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        console.log(formData);\r\n        try {\r\n          const response = await fetch('http://127.0.0.1:8000/api/area_calculator/', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(formData),\r\n          });\r\n          if (response.ok) {\r\n            // Request was successful, handle the response data\r\n            const responseData = await response.json();\r\n            console.log('API Response:', responseData);\r\n            setResult(responseData);\r\n          } else {\r\n            // Request failed, handle the error\r\n            console.error('API Request Failed');\r\n          }\r\n        } catch (error) {\r\n          console.error('API Request Error:', error);\r\n        }\r\n      };  \r\n\r\n    return (\r\n    <>\r\n        <form method=\"post\" noValidate onSubmit={handleSubmit}>\r\n            <h4>This Form is for Calculating Area of Land</h4>\r\n            <p><i>Each length must be in the same unit, and the area must be in unit square</i></p>\r\n  \r\n          {/* <p>\r\n            <label htmlFor=\"name\">Name: </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              maxLength=\"100\"\r\n              id=\"name\"\r\n              value={formData.name}\r\n              onChange={handleChange}\r\n              autoComplete=\"on\"\r\n              placeholder=\"Enter Any Name\"\r\n            />\r\n          </p> */}\r\n  \r\n          <p>\r\n          <label htmlFor=\"id_ab\">AB: </label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"ab\"\r\n            step=\"any\"\r\n            required\r\n            id=\"id_ab\"\r\n            value={formData.ab}\r\n            onChange={handleInputChange}\r\n            placeholder=\"Enter length of AB\"\r\n          />\r\n          </p>\r\n  \r\n          <p>\r\n              <label htmlFor=\"id_bc\">BC: </label>\r\n              <input\r\n              type=\"number\"\r\n              name=\"bc\"\r\n              step=\"any\"\r\n              required\r\n              id=\"id_bc\"\r\n              value={formData.bc}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Enter length of BC\"\r\n              />\r\n          </p>\r\n  \r\n          <p>\r\n              <label htmlFor=\"id_cd\">CD: </label>\r\n              <input\r\n              type=\"number\"\r\n              name=\"cd\"\r\n              step=\"any\"\r\n              required\r\n              id=\"id_cd\"\r\n              value={formData.cd}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Enter length of CD\"\r\n              />\r\n          </p>\r\n  \r\n          <p>\r\n              <label htmlFor=\"id_da\">DA: </label>\r\n              <input\r\n              type=\"number\"\r\n              name=\"da\"\r\n              step=\"any\"\r\n              required\r\n              id=\"id_da\"\r\n              value={formData.da}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Enter length of DA\"\r\n              />\r\n          </p>\r\n  \r\n          <p>\r\n              <label htmlFor=\"id_bd\">BD: </label>\r\n              <input\r\n              type=\"number\"\r\n              name=\"bd\"\r\n              step=\"any\"\r\n              required\r\n              id=\"id_bd\"\r\n              value={formData.bd}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Enter length of BD\"\r\n              />\r\n          </p>\r\n    \r\n            <button type=\"submit\" name=\"form_type\" value=\"ar_cal\" className=\"btnstyle\">\r\n                Get Result\r\n            </button>\r\n        </form>\r\n        {result !== null && (\r\n          <div>\r\n            <h2>Result</h2>\r\n            <p>The calculated area is: {result.area} square units</p>\r\n          </div>\r\n        )}\r\n    </>\r\n    );\r\n  }\r\n\r\n\r\n","D:\\VS_Code\\Projects\\lad_react\\src\\CommonFields.js",["59","60","61","62","63","64","65","66"],[],"D:\\VS_Code\\Projects\\lad_react\\src\\OuterLayer.js",[],[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":11,"column":19,"nodeType":"71","messageId":"72","endLine":11,"endColumn":21},{"ruleId":"69","severity":1,"message":"70","line":15,"column":23,"nodeType":"71","messageId":"72","endLine":15,"endColumn":25},{"ruleId":"69","severity":1,"message":"70","line":19,"column":23,"nodeType":"71","messageId":"72","endLine":19,"endColumn":25},{"ruleId":"69","severity":1,"message":"70","line":24,"column":15,"nodeType":"71","messageId":"72","endLine":24,"endColumn":17},{"ruleId":"69","severity":1,"message":"70","line":37,"column":20,"nodeType":"71","messageId":"72","endLine":37,"endColumn":22},{"ruleId":"69","severity":1,"message":"70","line":50,"column":20,"nodeType":"71","messageId":"72","endLine":50,"endColumn":22},{"ruleId":"73","severity":1,"message":"74","line":14,"column":11,"nodeType":"75","messageId":"76","endLine":14,"endColumn":23},{"ruleId":"73","severity":1,"message":"74","line":15,"column":11,"nodeType":"75","messageId":"76","endLine":15,"endColumn":23},{"ruleId":"67","replacedBy":"77"},{"ruleId":"73","severity":1,"message":"74","line":17,"column":11,"nodeType":"75","messageId":"76","endLine":17,"endColumn":23},{"ruleId":"73","severity":1,"message":"78","line":12,"column":12,"nodeType":"75","messageId":"76","endLine":12,"endColumn":18},{"ruleId":"73","severity":1,"message":"79","line":14,"column":11,"nodeType":"75","messageId":"76","endLine":14,"endColumn":23},{"ruleId":"73","severity":1,"message":"80","line":17,"column":15,"nodeType":"75","messageId":"76","endLine":17,"endColumn":17},{"ruleId":"73","severity":1,"message":"81","line":17,"column":19,"nodeType":"75","messageId":"76","endLine":17,"endColumn":21},{"ruleId":"73","severity":1,"message":"82","line":17,"column":23,"nodeType":"75","messageId":"76","endLine":17,"endColumn":25},{"ruleId":"73","severity":1,"message":"83","line":17,"column":27,"nodeType":"75","messageId":"76","endLine":17,"endColumn":29},{"ruleId":"73","severity":1,"message":"84","line":17,"column":31,"nodeType":"75","messageId":"76","endLine":17,"endColumn":33},{"ruleId":"85","severity":1,"message":"86","line":19,"column":17,"nodeType":"75","messageId":"87","endLine":19,"endColumn":21},"no-new-object",["88"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'handleChange' is assigned a value but never used.","Identifier","unusedVar",["88"],"'result' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'ab' is assigned a value but never used.","'bc' is assigned a value but never used.","'cd' is assigned a value but never used.","'da' is assigned a value but never used.","'bd' is assigned a value but never used.","no-use-before-define","'area' was used before it was defined.","usedBeforeDefined","no-object-constructor"]